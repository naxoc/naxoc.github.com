<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: backup | naxoc.net]]></title>
  <link href="http://naxoc.net/blog/categories/backup/atom.xml" rel="self"/>
  <link href="http://naxoc.net/"/>
  <updated>2014-02-02T12:54:12+01:00</updated>
  <id>http://naxoc.net/</id>
  <author>
    <name><![CDATA[Camilla Krag Jensen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Backup and migrate module + Dropbox = peace of mind]]></title>
    <link href="http://naxoc.net/2009/11/16/backup-and-migrate-module-plus-dropbox-equals-peace-of-mind/"/>
    <updated>2009-11-16T21:06:00+01:00</updated>
    <id>http://naxoc.net/2009/11/16/backup-and-migrate-module-plus-dropbox-equals-peace-of-mind</id>
    <content type="html"><![CDATA[<p>The <a href="http://drupal.org/project/backup_migrate">backup and migrate</a> module is truly sweet. We all know that it is a <em>really</em> good idea to back up data. But if you are like me &ndash; you forgot to do it or just don&rsquo;t do it for some lame reason. So backups should be automated. The backup and migrate module does exactly that &ndash; it can be configured to run every X hours if you have cron (and you should have) running on your site.
The module makes a dump of the database and puts it in a folder in the files folder of the site. Even if you use the public <a href="http://drupal.org/node/22240">download method</a>, the security is OK &ndash; a .htacces file put in the folder by the backup and migrate module and dissalows access to the folder&rsquo;s content.</p>

<p>In the unlikely event that my server goes up in flames, I like to have some backups that are not physically on the same server as the site. I really like Dropbox, so I thought I would figure out a way to use that for the database dumps. I found this very <a href="http://jaka.kubje.org/software/dropboxuploader/">nice and simple php script</a>, that will upload files to your dropbox. I used that to write a super simple php file that my cronjob will call once a day. I settled with having daily backups a week back in time, so the filenames are day names. That way monday&rsquo;s file will be overwritten next monday.</p>

<p>Here is what I did:</p>

<ol>
<li>Enable the backup migrate module</li>
<li>Go to yoursite.com/admin/content/backup_migrate/export and choose gz under compression, put your sitename in <em>Backup file name</em>, and put &ldquo;D&rdquo; for dayname under Timestamp format:
<img class="center <a" src="href="https://dl.dropboxusercontent.com/u/157691/cdn/naxocnet/timestamp_append.png">https://dl.dropboxusercontent.com/u/157691/cdn/naxocnet/timestamp_append.png</a>"></li>
<li>Download and unzip the latest <a href="http://jaka.kubje.org/software/dropboxuploader/">Dropbox uploader</a> (I used the 1.1.5 version)</li>
<li>Edit the variables capitalized in the php below and save the it to a file called dropbox_backup.php. Put it next to the Dropbox uploader file. The files should be put somewhere outside the drupal installation.</li>
<li>Put a line that in your crontab that calls the php script. It could look like this one, that will run every night at 1 and report to a log file how it went.
<code>00 01 * * * php PATH_TO_SCRIPT/dropbox_backup.php &gt;&gt; PATH_TO_SCRIPT/log.txt</code>
And that&rsquo;s it! Easy backup of your database and easy use of the ample storage space that Dropbox offers.
``` php
&lt;?php
$site_name = &lsquo;SITENAME&rsquo;;
$backup_dir = &lsquo;WHERE_YOUR_DB_DUMPS_ARE_PUT_BY_BACKUP_MIGRATE&rsquo;;
$todays_filename = sprintf(&lsquo;%s-%s.sql.gz&rsquo;, $site_name, date(&rsquo;D'));</li>
</ol>


<p>if (file_exists($backup_dir .&lsquo;/&rsquo;. $todays_filename)) {
  // Get todays file from where backup_migrate module puts it
  // and drop it in this folder (just to get it out of the &ldquo;files&rdquo;
  // folder in Drupal).
  exec(&ldquo;mv $backup_dir/$todays_filename &rdquo; . dirname($_SERVER[&lsquo;SCRIPT_FILENAME&rsquo;]));</p>

<p>  // And upload todays file to the Dropbox.
  require &lsquo;DropboxUploader.php&rsquo;;
  try {</p>

<pre><code>$uploader = new DropboxUploader('YOUR_EMAIL', 'YOUR_PASSWORD');
$uploader-&gt;upload(dirname($_SERVER['SCRIPT_NAME']) .'/'. $todays_filename, 'FOLDER_IN_DROPBOX');
echo date('m/d Y') . ": Uploaded $todays_filename to Dropbox\n";
</code></pre>

<p>  }
  catch (Exception $e) {</p>

<pre><code>echo date('m/d Y') . ": I had a problem uploading $todays_filename to Dropbox\n";
</code></pre>

<p>  }
}
?>
```</p>
]]></content>
  </entry>
  
</feed>

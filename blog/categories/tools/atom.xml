<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tools | naxoc.net]]></title>
  <link href="http://naxoc.net/blog/categories/tools/atom.xml" rel="self"/>
  <link href="http://naxoc.net/"/>
  <updated>2014-06-03T22:42:40+02:00</updated>
  <id>http://naxoc.net/</id>
  <author>
    <name><![CDATA[Camilla Krag Jensen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Switching back to Firefox]]></title>
    <link href="http://naxoc.net/2014/06/03/switching-back-to-firefox/"/>
    <updated>2014-06-03T16:38:30+02:00</updated>
    <id>http://naxoc.net/2014/06/03/switching-back-to-firefox</id>
    <content type="html"><![CDATA[<p>I have been using Firefox since it came out. I used it back when it was called Firebird and Phoenix. I went to the release party when 1.0 came out and I have advocated using Firefox to anybody that wanted to listen &mdash; and a few that didn&rsquo;t.</p>

<p>2-3 years ago I switched to Chrome along with a lot of other people. Firefox was getting bloated and Chrome had all kinds of shiny tools. But I am back to using Firefox now, and I thought I would explain what lured me back in this post.</p>

<p>I didn&rsquo;t switch because I was tired of, or unhappy with Chrome. I still use both so that I can be logged in to work stuff in one and my own stuff in the other. But I mainly use Firefox for web development now. It should be said that I use the <a href="http://www.mozilla.org/en-US/firefox/channel/#beta">Firefox Beta</a> version and I have had no problems with that. The reason I use the beta is that I really like a couple of the developer tool features, but version 29 also has nice developer tools.</p>

<p>These are some of the features and tools that have impressed me:</p>

<h2>Developer Toolbar</h2>

<p>Of all the shiny things this one was the one that made me switch. Firefox now has a developer toolbar that sits at the bottom of the page for as long as you want it around. Toggle it with Tools > Web Developer > Developer Toolbar. I just keep it around at all times. To change focus and go to it use <code>shift+F2</code>. You can run commands from text in the toolbar and it also shows a little red badge if there are javascript errors on the page.</p>

<h3>So what does it do?</h3>

<p>Well, it&rsquo;s a browser command line for web developers. Try typing <code>help</code> and get a list of commands. I use the <code>cookie</code> and <code>inspect [element]</code> most, but the <code>resize toggle</code> is pretty sweet too. Just like CLI it has completion and arrow up gets your history of commands. Another really cool one is <code>media emulate print</code> &mdash; it will show you the page with the print style sheet (or whatever media you put after emulate).</p>

<p>All these things can be done with the mouse too I&rsquo;m sure, but I like it that I can access these tools really fast with a browser CLI.</p>

<p><img class="center" src="/img/firefox-developer-tools/cookies.png">
The screenshot shows output from the command <code>cookie list</code>. You can find more info on the toolbar in the <a href="https://developer.mozilla.org/en-US/docs/Tools/GCLI">mozilla.org docs</a>.</p>

<h2>Scratchpad</h2>

<p>The scratchpad is a &lsquo;js-editor&rsquo; that lives in its own window. Invoke it from the Tools > Web Developer menu or by going <code>shift+F4</code>. You can write js and execute it with one of the three buttons. The code you write will be in the scope of the browser window you were in when you invoked the scratchpad so you can test your jQuery snippets or whatever does it for you. There are instructions on how to use the buttons in the comment that is displayed at the top of the file. One thing that is left out that is super helpful though is <code>cmd+shift+r</code>. That will reload the browser window, but keep your js code in the scratchpad.</p>

<p>The keyboard shortcuts are the same as for the style editor and the debugger. There are even key bindings for emacs and vim! To set key bindings, go to <code>about:config</code> in Firefox&rsquo;s location bar and set <code>devtools.editor.keymap</code> to &ldquo;vim&rdquo; or &ldquo;emacs&rdquo;.</p>

<h2>Pretty inspector</h2>

<p>This one is very subjective, but I think that the inspector and the whole developer tools is really pretty. I use the light color scheme, and it just looks better than Chrome&rsquo;s dev tools. I know, but I had to get that one of my chest. There is a dark color scheme setting in the options (click the gear).</p>

<p>There is a font preview tab in the right box on the inspector tab. It&rsquo;s nice to have a clue about the font. I am not a designer, so most the time I don&rsquo;t have a clue. This helps:</p>

<p><img class="center" src="/img/firefox-developer-tools/fonts.png"></p>

<p>Another cool thing about the inspector is the &ldquo;guides&rdquo; it shows when it highlights an element. It is best illustrated with an image. I am talking about the dotted lines that helps you see if you are aligned with what you want to be aligned with.</p>

<p><img class="center" src="/img/firefox-developer-tools/inspector.png"></p>

<h2>Network tab</h2>

<p>Like with the inspector &mdash; I just think it&rsquo;s pretty. And there are some useful things too! The filtering in the right hand box is really good. There is also a view with pie charts showing the page loaded twice: once with an empty browser cache and once with a primed browser cache. It is quite interesting to compare the two when you are slimming your page weight down. To get to it click the button on the lower right hand when on the network tab: <img src="/img/firefox-developer-tools/cache-button.png"></p>

<p>You then get this:</p>

<p><img class="center" src="/img/firefox-developer-tools/primed-cache.png"></p>

<p>See more about the network tab at the developer docs on <a href="https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor">mozilla.org</a></p>

<h2>Mobile version</h2>

<p>I have an Android phone whose factory default browser is Chrome. Firefox can sync between desktop and phone just like Chrome and I think it is as fast. Plus I also just like how it looks.</p>

<h2>So what?</h2>

<p>I don&rsquo;t have a strong enough opinion to start a browser war. I like both Chrome and Firefox and I will continue to use both. This blog post is just to describe the new cool stuff in Firefox and once again &mdash; whether you want to listen or not &mdash; I encourage you to try Firefox and play around with the new dev tools.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Switch between PHP versions with Homebrew]]></title>
    <link href="http://naxoc.net/2014/05/07/switch-between-php-versions-with-homebrew/"/>
    <updated>2014-05-07T20:25:40+02:00</updated>
    <id>http://naxoc.net/2014/05/07/switch-between-php-versions-with-homebrew</id>
    <content type="html"><![CDATA[<p>I am working on a few older Drupal sites that are quite insistent on using PHP 5.3 and not PHP 5.4. No problem &ndash; I&rsquo;ll just use Homebrew to switch between versions! But I have been running into all kinds of problems every time I have done this, so I figured I would post what I do to repair things here.</p>

<p>So, in theory all you should have to do is install the versions you need if you don&rsquo;t already have them.
<code>brew install php53</code>
And when you want to switch just run this:
<code>brew unlink php54 &amp;&amp; brew link php53</code></p>

<p>Apache also needs to know what version to use, so edit <em>/private/etc/apache2/httpd.conf</em> so that the line that looks like this has the right (major) version number:
<code>LoadModule php5_module /usr/local/opt/php54/libexec/apache2/libphp5.so</code></p>

<p>So far so good. You can check the version from the command line:
```
➜  ~  php &mdash;version
PHP 5.3.28 (cli) (built: May  7 2014 09:50:08)
Copyright &copy; 1997-2013 The PHP Group
Zend Engine v2.3.0, Copyright &copy; 1998-2013 Zend Technologies</p>

<pre><code>with Xdebug v2.2.5, Copyright (c) 2002-2014, by Derick Rethans
</code></pre>

<p>```</p>

<p>If you are not seeing what you expect, try adding add this to your <em>.bashrc</em> or <em>.zshrc</em> with the correct version number:
 <code>export PATH="$(brew --prefix homebrew/php/php54)/bin:$PATH"</code></p>

<p>If things are working now thats great! It doesn&rsquo;t always for me. I get this:
<code>
➜  ~  php -i
dyld: Library not loaded: /usr/local/lib/libpng15.15.dylib
  Referenced from: /usr/local/opt/php53/bin/php
  Reason: image not found
</code>
Sadly the only workaround I have found is to uninstall and install again:
  <code>brew uninstall php53 &amp; brew install php53</code></p>

<p>  It takes quite a long time but it does the trick.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using specific versions of formula with Homebrew]]></title>
    <link href="http://naxoc.net/2012/06/05/using-specific-versions-of-formula-with-homebrew/"/>
    <updated>2012-06-05T13:54:00+02:00</updated>
    <id>http://naxoc.net/2012/06/05/using-specific-versions-of-formula-with-homebrew</id>
    <content type="html"><![CDATA[<p>I have my LAMP stack and other things set up on my mac with the wonderful <a href="http://mxcl.github.com/homebrew">Homebrew</a>.</p>

<p>I recently did a <code>brew upgrade</code> on my system and it seemed that everything went smooth. But when I later ran PHP from the command line I got this error:
<code>
PHP Warning:  PHP Startup: Unable to load dynamic library '/usr/local/Cellar/memcached-php/2.0.1/memcached.so' - dlopen(/usr/local/Cellar/memcached-php/2.0.1/memcached.so, 9): Library not loaded: /usr/local/lib/libmemcached.9.dylib
  Referenced from: /usr/local/Cellar/memcached-php/2.0.1/memcached.so
  Reason: image not found in Unknown on line 0
</code></p>

<p>I poked around in my php.ini to see if the wrong file was being included or something like that, but it turned out that I had upgraded to a newer version of libmemcached than the one memcached was using. So I needed to downgrade libmemcached. Here is how to switch to any version available with Homebrew:</p>

<ol>
<li>
<code>brew versions libmemcached</code>
</li>
<li>
Find and note the version number you want. In my case I wasn't sure, so I just went with the second newest and that worked.
</li>
<li>
<code>brew switch libmemcached 1.0.4</code>
</li>
</ol>


<p>Change the version number and the formula above to whatever makes sense for what you are doing.</p>

<p>The example above is using a command that is an <a href="https://github.com/mxcl/homebrew/wiki/External-Commands">external command</a> for Homebrew. It works super fast and is easy to use.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Navigating with Krumo]]></title>
    <link href="http://naxoc.net/2011/09/14/navigating-with-krumo/"/>
    <updated>2011-09-14T09:13:00+02:00</updated>
    <id>http://naxoc.net/2011/09/14/navigating-with-krumo</id>
    <content type="html"><![CDATA[<p><a href="http://drupal.org/project/devel" title="Devel | drupal.org">The Devel module</a> includes the super helpful <a href="http://krumo.sourceforge.net/">Krumo library</a>. I use <code>dsm()</code> and <code>krumo()</code> all the time. If you are not familiar with Devel, you should try it. Morten Wulff wrote a <a href="https://ratatosk.backpackit.com/pub/1836982-debugging-drupal">demo page for the module</a>.
<img class="center <a" src="href="https://dl.dropboxusercontent.com/u/157691/cdn/naxocnet/krumo.png">https://dl.dropboxusercontent.com/u/157691/cdn/naxocnet/krumo.png</a>">
Today a client suggested that the Devel module Krumo could display the &ldquo;path&rdquo; to an item in an array by right clicking or otherwise interacting with the nested elements in the output from Krumo. I was really excited about that idea &ndash; I can&rsquo;t count the number of times I have tried and failed to target an item deep in a form array or an item in the node object simply because my human brain can&rsquo;t remember a structure like <code>$form['#node']-&gt;content['links']['comment']['#attributes']['class']</code> for more than 3 seconds.</p>

<p>Still very happy with this new idea I went straight home and started to hack away at the Krumo library to make it display the path to a desired item. After looking at the javascript for a while, and saying out loud that Javascript hates me, I realized that the killer feature I was trying to make already exists in Krumo! This is a well hidden gem that I haven&rsquo;t seen before today, so I thought I would share it:
If you double click an item in the Krumo output it prints the items array &ldquo;path&rdquo; so that you can copy paste it into your code and stop worrying about remembering long array structures.
<img class="center <a" src="href="https://dl.dropboxusercontent.com/u/157691/cdn/naxocnet/krumo_path.png">https://dl.dropboxusercontent.com/u/157691/cdn/naxocnet/krumo_path.png</a>" title="&lsquo;krumo with array path&rsquo;" >
Thanks to Niels Fanøe for the inspiration.</p>

<p>EDIT: I was using the dev D7 version, and the feature just went in this August. Thanks to Mark Theunissen for pointing that out. I also feel less stupid for not discovering the feature before now!</p>
]]></content>
  </entry>
  
</feed>
